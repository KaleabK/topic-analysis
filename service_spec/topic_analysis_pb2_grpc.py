# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from service_spec import topic_analysis_pb2 as service__spec_dot_topic__analysis__pb2


class TopicAnalysisStub(object):
  """/// Topic analysis Services

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PLSA = channel.unary_unary(
        '/TopicAnalysis/PLSA',
        request_serializer=service__spec_dot_topic__analysis__pb2.PLSARequest.SerializeToString,
        response_deserializer=service__spec_dot_topic__analysis__pb2.PLSAResponse.FromString,
        )


class TopicAnalysisServicer(object):
  """/// Topic analysis Services

  """

  def PLSA(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TopicAnalysisServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PLSA': grpc.unary_unary_rpc_method_handler(
          servicer.PLSA,
          request_deserializer=service__spec_dot_topic__analysis__pb2.PLSARequest.FromString,
          response_serializer=service__spec_dot_topic__analysis__pb2.PLSAResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'TopicAnalysis', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
